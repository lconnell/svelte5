// Wrapper for API client to allow custom base URL without editing autogenerated client.ts
import { createApiClient } from './client';
import { PUBLIC_API_BASE_URL } from '$env/static/public';
import type { ZodiosPlugin } from '@zodios/core';

// Use the backend base URL from .env or fallback to default
// To use this, add VITE_PUBLIC_API_BASE_URL or PUBLIC_API_BASE_URL to your .env file
const baseUrl = PUBLIC_API_BASE_URL || 'http://localhost:8000';

/**
 * API client instance with base URL from environment or default
 */
export const api = createApiClient(baseUrl);

// Automatically attach Authorization header if access_token is present in localStorage
const authHeaderPlugin: ZodiosPlugin = {
	name: 'auth-header',
	request: async (api, config) => {
		const token = typeof window !== 'undefined' ? localStorage.getItem('access_token') : null;
		if (token) {
			return {
				...config,
				headers: {
					...config.headers,
					Authorization: `Bearer ${token}`
				}
			};
		}
		return config;
	}
};

api.use(authHeaderPlugin);
