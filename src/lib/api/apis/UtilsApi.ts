/* tslint:disable */
/* eslint-disable */
/**
 * Work Order App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  Message,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    MessageFromJSON,
    MessageToJSON,
} from '../models/index';

export interface UtilsTestEmailRequest {
    emailTo: string;
}

/**
 * 
 */
export class UtilsApi extends runtime.BaseAPI {

    /**
     * Health Check
     */
    async utilsHealthCheckRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<boolean>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/utils/health-check/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<boolean>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Health Check
     */
    async utilsHealthCheck(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<boolean> {
        const response = await this.utilsHealthCheckRaw(initOverrides);
        return await response.value();
    }

    /**
     * Test emails.
     * Test Email
     */
    async utilsTestEmailRaw(requestParameters: UtilsTestEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Message>> {
        if (requestParameters['emailTo'] == null) {
            throw new runtime.RequiredError(
                'emailTo',
                'Required parameter "emailTo" was null or undefined when calling utilsTestEmail().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['emailTo'] != null) {
            queryParameters['email_to'] = requestParameters['emailTo'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2PasswordBearer", []);
        }

        const response = await this.request({
            path: `/api/v1/utils/test-email/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => MessageFromJSON(jsonValue));
    }

    /**
     * Test emails.
     * Test Email
     */
    async utilsTestEmail(requestParameters: UtilsTestEmailRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Message> {
        const response = await this.utilsTestEmailRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
