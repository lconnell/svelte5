/* tslint:disable */
/* eslint-disable */
/**
 * Work Order App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  PrivateUserCreate,
  UserPublic,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    PrivateUserCreateFromJSON,
    PrivateUserCreateToJSON,
    UserPublicFromJSON,
    UserPublicToJSON,
} from '../models/index';

export interface PrivateCreateUserRequest {
    privateUserCreate: PrivateUserCreate;
}

/**
 * 
 */
export class PrivateApi extends runtime.BaseAPI {

    /**
     * Create a new user.
     * Create User
     */
    async privateCreateUserRaw(requestParameters: PrivateCreateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserPublic>> {
        if (requestParameters['privateUserCreate'] == null) {
            throw new runtime.RequiredError(
                'privateUserCreate',
                'Required parameter "privateUserCreate" was null or undefined when calling privateCreateUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/private/users/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PrivateUserCreateToJSON(requestParameters['privateUserCreate']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserPublicFromJSON(jsonValue));
    }

    /**
     * Create a new user.
     * Create User
     */
    async privateCreateUser(requestParameters: PrivateCreateUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserPublic> {
        const response = await this.privateCreateUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
